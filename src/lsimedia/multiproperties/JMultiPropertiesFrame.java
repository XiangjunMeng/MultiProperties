/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lsimedia.multiproperties;

import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.HashMap;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author sbodmer
 */
public class JMultiPropertiesFrame extends javax.swing.JFrame implements ActionListener, MouseListener {
    /**
     * The key is the file full path
     */
    HashMap<String, JMultiProperties> jms = new HashMap<>();
    
    /**
     * The current selected file
     */
    JMultiProperties selected = null;
    
    DefaultListModel<File> model = new DefaultListModel<>();
    
    /**
     * Creates new form JMultiPropertiesFrame
     */
    public JMultiPropertiesFrame(boolean allowProcess) {
        initComponents();
        
        MN_Quit.addActionListener(this);
        MN_Load.addActionListener(this);
        MN_Save.addActionListener(this);
        
        BT_Load.addActionListener(this);
        BT_Save.addActionListener(this);
        if (allowProcess) {
            BT_SaveProcess.addActionListener(this);
            
        } else {
            BT_SaveProcess.setVisible(false);
            
        }
        
        LI_Files.setModel((ListModel) model);
        LI_Files.addMouseListener(this);
    }

    
    //**************************************************************************
    //*** ActionListener
    //**************************************************************************
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals("quit")) {
            close();
            
        } else if (e.getActionCommand().equals("load")) {
            JFileChooser jf = new JFileChooser();
            jf.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            jf.setMultiSelectionEnabled(true);
            int rep = jf.showOpenDialog(this);
            if (rep == JFileChooser.APPROVE_OPTION) {
                File f[] = jf.getSelectedFiles();
                for (int i=0;i<f.length;i++) {
                    File file = f[i];
                    if (file.isFile()) {
                        model.addElement(file);
                        LB_Status.setText(""+file.getPath()+" loaded");
                    }
                }
            }
            
        } else if (e.getActionCommand().equals("save")) {
            if (selected != null) {
                selected.save(false);
                LB_Status.setText(""+selected.getFile().getPath()+" saved");
            }
            
        } else if (e.getActionCommand().equals("saveProcess")) {
            if (selected != null) {
                selected.save(true);
                LB_Status.setText(""+selected.getFile().getPath()+" saved and processed");
            }
        }
    }
    
    //**************************************************************************
    //*** NMouseListener
    //**************************************************************************
    @Override
    public void mouseClicked(MouseEvent e) {
        if (e.getSource() == LI_Files) {
            if (e.getClickCount() >= 2) {
                File f = model.elementAt(LI_Files.getSelectedIndex());
                LB_File.setText(f.getPath());
                
                selected = jms.get(f.getPath());
                if (selected == null) {
                    selected = new JMultiProperties();
                    jms.put(f.getPath(), selected);
                    selected.setFile(f);
                    PN_Content.add(selected, f.getPath());
                    
                }
                
                CardLayout layout = (CardLayout) PN_Content.getLayout();
                layout.show(PN_Content, f.getPath());
            }
        }
    }

    @Override
    public void mousePressed(MouseEvent e) {
        //---
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        //---
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        //---
    }

    @Override
    public void mouseExited(MouseEvent e) {
        //---
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LB_Status = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        LI_Files = new javax.swing.JList<>();
        jPanel3 = new javax.swing.JPanel();
        PN_Content = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        LB_File = new javax.swing.JLabel();
        jToolBar1 = new javax.swing.JToolBar();
        BT_Load = new javax.swing.JButton();
        BT_Save = new javax.swing.JButton();
        BT_SaveProcess = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        MN_Load = new javax.swing.JMenuItem();
        MN_Save = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MN_Quit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        LB_Status.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        LB_Status.setText("...");
        jPanel1.add(LB_Status);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        jSplitPane1.setDividerLocation(200);

        jPanel2.setLayout(new java.awt.BorderLayout());

        LI_Files.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        LI_Files.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(LI_Files);

        jPanel2.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jSplitPane1.setLeftComponent(jPanel2);

        jPanel3.setLayout(new java.awt.BorderLayout());

        PN_Content.setLayout(new java.awt.CardLayout());
        PN_Content.add(jLabel1, "empty");

        jPanel3.add(PN_Content, java.awt.BorderLayout.CENTER);

        LB_File.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        LB_File.setText("...");
        jPanel4.add(LB_File);

        jPanel3.add(jPanel4, java.awt.BorderLayout.NORTH);

        jSplitPane1.setRightComponent(jPanel3);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        BT_Load.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        BT_Load.setText("Load");
        BT_Load.setActionCommand("load");
        BT_Load.setFocusable(false);
        BT_Load.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BT_Load.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(BT_Load);

        BT_Save.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        BT_Save.setText("Save");
        BT_Save.setActionCommand("save");
        BT_Save.setFocusable(false);
        BT_Save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BT_Save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(BT_Save);

        BT_SaveProcess.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        BT_SaveProcess.setText("Save and process");
        BT_SaveProcess.setActionCommand("saveProcess");
        BT_SaveProcess.setFocusable(false);
        BT_SaveProcess.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BT_SaveProcess.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(BT_SaveProcess);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jMenuBar1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N

        MN_Load.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        MN_Load.setText("Load");
        MN_Load.setActionCommand("load");
        jMenu1.add(MN_Load);

        MN_Save.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        MN_Save.setText("Save");
        MN_Save.setActionCommand("save");
        jMenu1.add(MN_Save);
        jMenu1.add(jSeparator1);

        MN_Quit.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        MN_Quit.setText("Quit");
        MN_Quit.setActionCommand("quit");
        jMenu1.add(MN_Quit);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        setBounds(0, 0, 810, 630);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        close();
    }//GEN-LAST:event_formWindowClosing

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Load;
    private javax.swing.JButton BT_Save;
    private javax.swing.JButton BT_SaveProcess;
    private javax.swing.JLabel LB_File;
    private javax.swing.JLabel LB_Status;
    private javax.swing.JList<String> LI_Files;
    private javax.swing.JMenuItem MN_Load;
    private javax.swing.JMenuItem MN_Quit;
    private javax.swing.JMenuItem MN_Save;
    private javax.swing.JPanel PN_Content;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private void close() {
        setVisible(false);
        dispose();
        
    }
    
    
    private void stackFiles() {
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info:javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JMultiPropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JMultiPropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JMultiPropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JMultiPropertiesFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        */
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                boolean allowProcess = false;
        
                for (int i=0;i<args.length;i++) {
                    if (args[i].equals("-allowProcess")) allowProcess = true;
                }
                
                new JMultiPropertiesFrame(allowProcess).setVisible(true);
            }
        });
    }

    

    

    
}
